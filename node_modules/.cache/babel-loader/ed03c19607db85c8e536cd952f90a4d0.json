{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nill\\\\Desktop\\\\projects\\\\Employee Directory\\\\Employee-Directory\\\\employee-directory\\\\src\\\\components\\\\RandomLogic.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport UserDetail from \"./UserDetail\";\nimport SearchForm from \"./SearchForm\"; //make import for container, row, col, userdetail, usersearch, searchform \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RandomLogic extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      result: {},\n      search: \"\"\n    };\n\n    this.searchNames = query => {\n      AudioParam.search(query).then(res => this.setState({\n        result: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.searchNames(this.state.search);\n    };\n  }\n\n  componentDidMount() {\n    this.searchNames(\"\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          size: \"md-8\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            heading: this.state.result.Title || \"Search for a Name\",\n            children: this.state.result.Title ? /*#__PURE__*/_jsxDEV(UserDetail, {\n              first: this.state.result.first,\n              last: this.state.result.last,\n              location: this.state.result.location,\n              email: this.state.result.email,\n              age: this.state.result.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"No Results to Display\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          size: \"md-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            heading: \"Search\",\n            children: /*#__PURE__*/_jsxDEV(SearchForm, {\n              value: this.state.search,\n              handleInputChange: this.handleInputChange,\n              handleFormSubmit: this.handleFormSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }, this)\n    /*       <Card\r\n                  heading={this.state.result.Title || \"Search for a Name\"}\r\n                >\r\n                  {this.state.result.Title ? (\r\n                    <UserDetail\r\n                      first={this.state.result.first}\r\n                      last={this.state.result.last}\r\n                      location={this.state.result.location}\r\n                      email={this.state.result.email}\r\n                      age={this.state.result.age}\r\n                    />\r\n                  ) : (\r\n                    <h3>No Results to Display</h3>\r\n                  )}\r\n              </Card> */\n    ;\n  }\n\n}\n\nexport default RandomLogic;\n/* componentDidMount()\r\n\r\nsetState()\r\n\r\ncomponentWillUnmount() */\n\n/* In general what you would do is:\r\n1. When the component loads you need to fetch using randomUser API and keep that array rendered using table\r\n2. When the user tries to sort based on certain criteria such as age or name  , sort and render\r\nJust a front end react stuff that you have to do, no back end work.  It is pretty much like your weather forecast hw that you would have done in HW 6 or \r\nso, where you will use fetch to get weather data and render, here you will use react and react components to render */","map":{"version":3,"sources":["C:/Users/Nill/Desktop/projects/Employee Directory/Employee-Directory/employee-directory/src/components/RandomLogic.js"],"names":["React","Component","Card","Container","Row","Col","UserDetail","SearchForm","RandomLogic","state","result","search","searchNames","query","AudioParam","then","res","setState","data","catch","err","console","log","handleInputChange","event","value","target","name","handleFormSubmit","preventDefault","componentDidMount","render","Title","first","last","location","email","age"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\nimport Container from \"./Container\";\r\nimport Row from \"./Row\";\r\nimport Col from \"./Col\";\r\nimport UserDetail from \"./UserDetail\";\r\nimport SearchForm from \"./SearchForm\";\r\n//make import for container, row, col, userdetail, usersearch, searchform \r\n\r\nclass RandomLogic extends Component {\r\n    state = {\r\n        result: {},\r\n        search: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.searchNames(\"\");\r\n    }\r\n\r\n    searchNames = query => {\r\n        AudioParam.search(query)\r\n        .then(res => this.setState({result:res.data}\r\n        ))\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    // When the form is submitted, search the API for the value of `this.state.search`\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.searchNames(this.state.search);\r\n    };\r\n\r\n  render() {\r\n    return (\r\n    \r\n       <Container>\r\n        <Row>\r\n          <Col size=\"md-8\">\r\n            <Card\r\n              heading={this.state.result.Title || \"Search for a Name\"}\r\n            >\r\n              {this.state.result.Title ? (\r\n                <UserDetail\r\n                  first={this.state.result.first}\r\n                  last={this.state.result.last}\r\n                  location={this.state.result.location}\r\n                  email={this.state.result.email}\r\n                  age={this.state.result.age}\r\n                />\r\n              ) : (\r\n                <h3>No Results to Display</h3>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n          <Col size=\"md-4\">\r\n            <Card heading=\"Search\">\r\n              <SearchForm\r\n                value={this.state.search}\r\n                handleInputChange={this.handleInputChange}\r\n                handleFormSubmit={this.handleFormSubmit}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n\r\n/*       <Card\r\n              heading={this.state.result.Title || \"Search for a Name\"}\r\n            >\r\n              {this.state.result.Title ? (\r\n                <UserDetail\r\n                  first={this.state.result.first}\r\n                  last={this.state.result.last}\r\n                  location={this.state.result.location}\r\n                  email={this.state.result.email}\r\n                  age={this.state.result.age}\r\n                />\r\n              ) : (\r\n                <h3>No Results to Display</h3>\r\n              )}\r\n          </Card> */\r\n    );\r\n  }\r\n}\r\n\r\nexport default RandomLogic;\r\n\r\n\r\n\r\n\r\n/* componentDidMount()\r\n\r\nsetState()\r\n\r\ncomponentWillUnmount() */\r\n\r\n\r\n/* In general what you would do is:\r\n1. When the component loads you need to fetch using randomUser API and keep that array rendered using table\r\n2. When the user tries to sort based on certain criteria such as age or name  , sort and render\r\nJust a front end react stuff that you have to do, no back end work.  It is pretty much like your weather forecast hw that you would have done in HW 6 or \r\nso, where you will use fetch to get weather data and render, here you will use react and react components to render */"]},"metadata":{},"sourceType":"module"}